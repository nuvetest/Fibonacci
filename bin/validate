#!/usr/bin/env python

import sys, os, json, subprocess, optparse
from pprint import pprint

parser = optparse.OptionParser()

#Production
# WARP_URL = 'https://81urti13zk.execute-api.us-east-1.amazonaws.com/production/WarpServer'

def defineOptions():
    """
    Define command line options for the script.
    """
    global parser
    parser.add_option("-a", "--app", dest="APP", default=None,
                  help="Application name.",
                  metavar="type")

def RunCommand( command ):
#    print('Running command : %s\n' %command)
    process = subprocess.Popen( command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True )
    retVal = process.wait()
    outStr, errStr = process.communicate()
#    print('Output : %s\n' %outStr)
    if errStr != '':
        print('Error  : %s\n' %errStr)
    return retVal, outStr, errStr

def main( args ):
    global parser
    defineOptions()
    (options, args) = parser.parse_args()

    try:
        if options.APP  == None:
            print "Missing args"
            return
        r,o,e = RunCommand( options.APP )

        if( r != 0):
            print ("Validation failed: Application exited with error %s" %e)
            return

        if (o == '0 1 1 2 3 5 8 13 21 34 '):
            print ("Validation success")
        else:
            print ("Validation failed: Incorrect output")
       
    except Exception, e:
        print ("Validation failed: Application exited with error %s" %e)
        raise

if __name__=='__main__':
    main( sys.argv )
